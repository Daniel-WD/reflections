How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Using the command diff shows me the difference between the content of two
    files, so I can see what might be wrong in the newer version.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    As a programmer I can see the progress of my files and I also can find bugs
    easyer.

git log: show every commit
...Message- what changed
...id- id

git diff [first id] [second id]
...shows the difference

What do you think are the pros and cons of manually choosing when 
to create a commit, like you do in Git, vs having versions 
automatically saved, like Google Docs does?

    pros:
        ...I can make a commit when I know it's necessary
        ...I know when I made a commit
        ...Commits won't be saved to often or to less

    less:
        ...It's good, because I could forget to commit sometimes
        ...The PC is making the commits and I dont have to be 
           worry about making them

git log --stat
...statistic about which files have changed in each commit

Why do you think some version xontrol systems, like Git, allow 
saving multiple files in one commit, while others, like Google Docs,
treat each file separately?

    I think it depends on the kind of data to save. In case one
    logical change goes through more than one file so it's better
    to save multiple files in one commit. In Google Docs you don't
    have to change multiple files for a single feature so saving
    each file seperately is the better choice.

How can you use the commands git log and git diff to view the 
history of files?

    With git log I can see all changes of the files and with git
    diff I can find out the differences between two files/commit ids.

How might using version control make you more confident to make
changes that could break something?

    It makes me a lot of confident :), because I can load older 
    versions every time I want.

Now that you have your workspace set up, what do you want to try
using Git for?

    I want to use Git for my developing projects.

